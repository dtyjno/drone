[  7%] Built target gtest_main
[  7%] Built target gtest
[ 11%] Built target frame_transforms
[ 15%] Built target pose_subscriber
[ 19%] Built target px4_ros_com_tutorial_test
[ 21%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/APMROS2Drone.cpp.o
[ 23%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/DolandState.cpp.o
[ 25%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/DoshotState.cpp.o
[ 26%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/EndState.cpp.o
[ 28%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/GotoScoutPointState.cpp.o
[ 30%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/GotoShotPointState.cpp.o
[ 32%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/InitState.cpp.o
[ 34%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/ReflushConfigState.cpp.o
[ 36%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/StopState.cpp.o
[ 38%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/SurroundSeeState.cpp.o
[ 40%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/TakeoffState.cpp.o
[ 42%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/TerminalControlState.cpp.o
[ 44%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/task/DoLandTask.cpp.o
[ 46%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp.o
[ 48%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/task/DoShotTask.cpp.o
[ 50%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/ROS2drone/ROS2Drone.cpp.o
[ 51%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/drone/AbstractDrone.cpp.o
[ 53%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/drone/state/InitState.cpp.o
[ 55%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/drone/state/State.cpp.o
[ 57%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/drone/task/RTLLandTask.cpp.o
[ 59%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/drone/task/SetPointTask.cpp.o
[ 61%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/drone/task/PrintInfoTask.cpp.o
[ 63%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/drone/task/WayPointTask.cpp.o
[ 65%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/main.cpp.o
[ 67%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/stateMachine/State.cpp.o
[ 69%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/stateMachine/StateMachine.cpp.o
[ 71%] Building CXX object CMakeFiles/offboard_control.dir/src/offboard_control/task/BlankTask.cpp.o
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp: In instantiation of ‘bool PrintInfoTask::init(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:91:32:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>; T = PrintInfoTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:171:51:   required from ‘bool Task<T>::execute_ros2(std::shared_ptr<ROS2Drone>) [with T = PrintInfoTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:170:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:29:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   29 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/TaskBase.h:9,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:10,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.h:3,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp: In instantiation of ‘bool PrintInfoTask::run(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:101:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>; T = PrintInfoTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:171:51:   required from ‘bool Task<T>::execute_ros2(std::shared_ptr<ROS2Drone>) [with T = PrintInfoTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:170:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:44:59: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   44 |                 ss << "px:  " << std::setw(10) << device->get_x_pos() << ", py: " << std::setw(10) << device->get_y_pos() << ", pz: " << std::setw(10) << device->get_z_pos() << std::endl;
      |                                                   ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:44:111: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   44 |                 ss << "px:  " << std::setw(10) << device->get_x_pos() << ", py: " << std::setw(10) << device->get_y_pos() << ", pz: " << std::setw(10) << device->get_z_pos() << std::endl;
      |                                                                                                       ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:44:163: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   44 |                 ss << "px:  " << std::setw(10) << device->get_x_pos() << ", py: " << std::setw(10) << device->get_y_pos() << ", pz: " << std::setw(10) << device->get_z_pos() << std::endl;
      |                                                                                                                                                           ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:45:59: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   45 |                 ss << "vx:  " << std::setw(10) << device->get_x_vel() << ", vy: " << std::setw(10) << device->get_y_vel() << ", vz: " << std::setw(10) << device->get_z_vel() << std::endl;
      |                                                   ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:45:111: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   45 |                 ss << "vx:  " << std::setw(10) << device->get_x_vel() << ", vy: " << std::setw(10) << device->get_y_vel() << ", vz: " << std::setw(10) << device->get_z_vel() << std::endl;
      |                                                                                                       ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:45:163: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   45 |                 ss << "vx:  " << std::setw(10) << device->get_x_vel() << ", vy: " << std::setw(10) << device->get_y_vel() << ", vz: " << std::setw(10) << device->get_z_vel() << std::endl;
      |                                                                                                                                                           ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:48:46: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   48 |                 ss << "yaw_vel: " << device->get_yaw_vel() << std::endl;
      |                                      ~~~~~~~~^~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:50:25: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   50 |                 device->get_euler(roll, pitch, yaw);
      |                 ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:52:42: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   52 |                 ss << "lat: " << device->get_lat() << ", lon: " << device->get_lon() << ", alt: " << device->get_alt() << std::endl;
      |                                  ~~~~~~~~^~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:52:76: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   52 |                 ss << "lat: " << device->get_lat() << ", lon: " << device->get_lon() << ", alt: " << device->get_alt() << std::endl;
      |                                                                    ~~~~~~~~^~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:52:110: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   52 |                 ss << "lat: " << device->get_lat() << ", lon: " << device->get_lon() << ", alt: " << device->get_alt() << std::endl;
      |                                                                                                      ~~~~~~~~^~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:53:60: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   53 |                 ss << "rangefinder_distance:  " << device->get_rangefinder_distance() << std::endl;
      |                                                    ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:54:48: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   54 |                 ss << "armed:     " << device->get_armed() << std::endl;
      |                                        ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:55:48: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   55 |                 ss << "connected: " << device->get_connected() << std::endl;
      |                                        ~~~~~~~~^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:56:46: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   56 |                 ss << "guided:  " << device->get_guided() << std::endl;
      |                                      ~~~~~~~~^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:57:48: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   57 |                 ss << "mode:      " << device->get_mode() << std::endl;
      |                                        ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:58:53: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   58 |                 ss << "system_status:  " << device->get_system_status() << std::endl;
      |                                             ~~~~~~~~^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:59:53: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   59 |                 ss << "x_home_pos:     " << device->get_x_home_pos() << ", y_home_pos: " << device->get_y_home_pos() << ", z_home_pos: " << device->get_z_home_pos() << std::endl;
      |                                             ~~~~~~~~^~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:59:101: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   59 |                 ss << "x_home_pos:     " << device->get_x_home_pos() << ", y_home_pos: " << device->get_y_home_pos() << ", z_home_pos: " << device->get_z_home_pos() << std::endl;
      |                                                                                             ~~~~~~~~^~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:59:149: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   59 |                 ss << "x_home_pos:     " << device->get_x_home_pos() << ", y_home_pos: " << device->get_y_home_pos() << ", z_home_pos: " << device->get_z_home_pos() << std::endl;
      |                                                                                                                                             ~~~~~~~~^~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:60:51: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   60 |                 ss << "running_time: " << device->get_cur_time() << std::endl;
      |                                           ~~~~~~~~^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:62:25: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   62 |                 device->log_info(ss.str().c_str());
      |                 ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp: In instantiation of ‘bool PrintInfoTask::end(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:110:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>; T = PrintInfoTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:171:51:   required from ‘bool Task<T>::execute_ros2(std::shared_ptr<ROS2Drone>) [with T = PrintInfoTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:170:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:84:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   84 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp: In instantiation of ‘bool PrintInfoTask::init(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:91:32:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>; T = PrintInfoTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:175:54:   required from ‘bool Task<T>::execute_apm(std::shared_ptr<APMROS2Drone>) [with T = PrintInfoTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:174:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:29:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   29 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp: In instantiation of ‘bool PrintInfoTask::run(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:101:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>; T = PrintInfoTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:175:54:   required from ‘bool Task<T>::execute_apm(std::shared_ptr<APMROS2Drone>) [with T = PrintInfoTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:174:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:44:59: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   44 |                 ss << "px:  " << std::setw(10) << device->get_x_pos() << ", py: " << std::setw(10) << device->get_y_pos() << ", pz: " << std::setw(10) << device->get_z_pos() << std::endl;
      |                                                   ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:44:111: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   44 |                 ss << "px:  " << std::setw(10) << device->get_x_pos() << ", py: " << std::setw(10) << device->get_y_pos() << ", pz: " << std::setw(10) << device->get_z_pos() << std::endl;
      |                                                                                                       ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:44:163: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   44 |                 ss << "px:  " << std::setw(10) << device->get_x_pos() << ", py: " << std::setw(10) << device->get_y_pos() << ", pz: " << std::setw(10) << device->get_z_pos() << std::endl;
      |                                                                                                                                                           ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:45:59: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   45 |                 ss << "vx:  " << std::setw(10) << device->get_x_vel() << ", vy: " << std::setw(10) << device->get_y_vel() << ", vz: " << std::setw(10) << device->get_z_vel() << std::endl;
      |                                                   ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:45:111: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   45 |                 ss << "vx:  " << std::setw(10) << device->get_x_vel() << ", vy: " << std::setw(10) << device->get_y_vel() << ", vz: " << std::setw(10) << device->get_z_vel() << std::endl;
      |                                                                                                       ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:45:163: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   45 |                 ss << "vx:  " << std::setw(10) << device->get_x_vel() << ", vy: " << std::setw(10) << device->get_y_vel() << ", vz: " << std::setw(10) << device->get_z_vel() << std::endl;
      |                                                                                                                                                           ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:48:46: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   48 |                 ss << "yaw_vel: " << device->get_yaw_vel() << std::endl;
      |                                      ~~~~~~~~^~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:50:25: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   50 |                 device->get_euler(roll, pitch, yaw);
      |                 ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:52:42: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   52 |                 ss << "lat: " << device->get_lat() << ", lon: " << device->get_lon() << ", alt: " << device->get_alt() << std::endl;
      |                                  ~~~~~~~~^~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:52:76: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   52 |                 ss << "lat: " << device->get_lat() << ", lon: " << device->get_lon() << ", alt: " << device->get_alt() << std::endl;
      |                                                                    ~~~~~~~~^~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:52:110: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   52 |                 ss << "lat: " << device->get_lat() << ", lon: " << device->get_lon() << ", alt: " << device->get_alt() << std::endl;
      |                                                                                                      ~~~~~~~~^~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:53:60: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   53 |                 ss << "rangefinder_distance:  " << device->get_rangefinder_distance() << std::endl;
      |                                                    ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:54:48: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   54 |                 ss << "armed:     " << device->get_armed() << std::endl;
      |                                        ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:55:48: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   55 |                 ss << "connected: " << device->get_connected() << std::endl;
      |                                        ~~~~~~~~^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:56:46: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   56 |                 ss << "guided:  " << device->get_guided() << std::endl;
      |                                      ~~~~~~~~^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:57:48: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   57 |                 ss << "mode:      " << device->get_mode() << std::endl;
      |                                        ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:58:53: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   58 |                 ss << "system_status:  " << device->get_system_status() << std::endl;
      |                                             ~~~~~~~~^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:59:53: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   59 |                 ss << "x_home_pos:     " << device->get_x_home_pos() << ", y_home_pos: " << device->get_y_home_pos() << ", z_home_pos: " << device->get_z_home_pos() << std::endl;
      |                                             ~~~~~~~~^~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:59:101: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   59 |                 ss << "x_home_pos:     " << device->get_x_home_pos() << ", y_home_pos: " << device->get_y_home_pos() << ", z_home_pos: " << device->get_z_home_pos() << std::endl;
      |                                                                                             ~~~~~~~~^~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:59:149: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   59 |                 ss << "x_home_pos:     " << device->get_x_home_pos() << ", y_home_pos: " << device->get_y_home_pos() << ", z_home_pos: " << device->get_z_home_pos() << std::endl;
      |                                                                                                                                             ~~~~~~~~^~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:60:51: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   60 |                 ss << "running_time: " << device->get_cur_time() << std::endl;
      |                                           ~~~~~~~~^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:62:25: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   62 |                 device->log_info(ss.str().c_str());
      |                 ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp: In instantiation of ‘bool PrintInfoTask::end(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:110:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>; T = PrintInfoTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:175:54:   required from ‘bool Task<T>::execute_apm(std::shared_ptr<APMROS2Drone>) [with T = PrintInfoTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:174:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/PrintInfoTask.cpp:84:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   84 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:468: CMakeFiles/offboard_control.dir/src/offboard_control/drone/task/PrintInfoTask.cpp.o] Error 1
gmake[2]: *** Waiting for unfinished jobs....
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp: In instantiation of ‘bool SetPointTask::init(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:91:32:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>; T = SetPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:171:51:   required from ‘bool Task<T>::execute_ros2(std::shared_ptr<ROS2Drone>) [with T = SetPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:170:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:28:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   28 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/TaskBase.h:9,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:10,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.h:3,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp: In instantiation of ‘bool SetPointTask::run(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:101:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>; T = SetPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:171:51:   required from ‘bool Task<T>::execute_ros2(std::shared_ptr<ROS2Drone>) [with T = SetPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:170:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:38:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   38 |     device->log_info_throttle(std::chrono::milliseconds(500), "%s: time=%s", get_string().c_str(), timer_.elapsed() == std::numeric_limits<double>::max() ? "max" : std::to_string(timer_.elapsed()).c_str());
      |     ~~~~~~~~^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:41:31: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   41 |             (is_equal(device->get_x_pos(), parameters_.target_x, parameters_.accuracy) &&
      |                       ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:42:30: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   42 |             is_equal(device->get_y_pos(), parameters_.target_y, parameters_.accuracy))
      |                      ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:52:21: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   52 |             device->log_info("%s: 点位%d x: %lf y: %lf z: %lf timeout=%s",
      |             ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:58:35: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   58 |                 (is_equal(device->get_x_pos(), x_temp, parameters_.accuracy) && is_equal(device->get_y_pos(), y_temp, parameters_.accuracy))? "true" : "false"
      |                           ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:58:98: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   58 |                 (is_equal(device->get_x_pos(), x_temp, parameters_.accuracy) && is_equal(device->get_y_pos(), y_temp, parameters_.accuracy))? "true" : "false"
      |                                                                                          ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:61:37: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   61 |                             device->send_start_setpoint_command(x_temp, y_temp, z_temp, yaw_temp); // 发送本地坐标系下的航点指令
      |                             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:63:25: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   63 |                 device->send_local_setpoint_command(x_temp, y_temp, z_temp, yaw_temp); // 发送局部坐标系下的航点指令
      |                 ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:65:25: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   65 |                 device->log_error("%s: 未知的坐标系参数", get_string().c_str());
      |                 ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp: In instantiation of ‘bool SetPointTask::end(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:110:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>; T = SetPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:171:51:   required from ‘bool Task<T>::execute_ros2(std::shared_ptr<ROS2Drone>) [with T = SetPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:170:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:81:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   81 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp: In instantiation of ‘bool SetPointTask::init(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:91:32:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>; T = SetPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:175:54:   required from ‘bool Task<T>::execute_apm(std::shared_ptr<APMROS2Drone>) [with T = SetPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:174:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:28:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   28 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp: In instantiation of ‘bool SetPointTask::run(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:101:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>; T = SetPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:175:54:   required from ‘bool Task<T>::execute_apm(std::shared_ptr<APMROS2Drone>) [with T = SetPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:174:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:38:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   38 |     device->log_info_throttle(std::chrono::milliseconds(500), "%s: time=%s", get_string().c_str(), timer_.elapsed() == std::numeric_limits<double>::max() ? "max" : std::to_string(timer_.elapsed()).c_str());
      |     ~~~~~~~~^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:41:31: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   41 |             (is_equal(device->get_x_pos(), parameters_.target_x, parameters_.accuracy) &&
      |                       ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:42:30: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   42 |             is_equal(device->get_y_pos(), parameters_.target_y, parameters_.accuracy))
      |                      ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:52:21: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   52 |             device->log_info("%s: 点位%d x: %lf y: %lf z: %lf timeout=%s",
      |             ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:58:35: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   58 |                 (is_equal(device->get_x_pos(), x_temp, parameters_.accuracy) && is_equal(device->get_y_pos(), y_temp, parameters_.accuracy))? "true" : "false"
      |                           ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:58:98: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   58 |                 (is_equal(device->get_x_pos(), x_temp, parameters_.accuracy) && is_equal(device->get_y_pos(), y_temp, parameters_.accuracy))? "true" : "false"
      |                                                                                          ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:61:37: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   61 |                             device->send_start_setpoint_command(x_temp, y_temp, z_temp, yaw_temp); // 发送本地坐标系下的航点指令
      |                             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:63:25: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   63 |                 device->send_local_setpoint_command(x_temp, y_temp, z_temp, yaw_temp); // 发送局部坐标系下的航点指令
      |                 ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:65:25: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   65 |                 device->log_error("%s: 未知的坐标系参数", get_string().c_str());
      |                 ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp: In instantiation of ‘bool SetPointTask::end(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:110:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>; T = SetPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:175:54:   required from ‘bool Task<T>::execute_apm(std::shared_ptr<APMROS2Drone>) [with T = SetPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:174:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/SetPointTask.cpp:81:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   81 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:496: CMakeFiles/offboard_control.dir/src/offboard_control/drone/task/SetPointTask.cpp.o] Error 1
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp: In instantiation of ‘bool WayPointTask::init(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:91:32:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>; T = WayPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:171:51:   required from ‘bool Task<T>::execute_ros2(std::shared_ptr<ROS2Drone>) [with T = WayPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:170:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:28:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   28 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/TaskBase.h:9,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:10,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.h:3,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp: In instantiation of ‘bool WayPointTask::run(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:101:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>; T = WayPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:171:51:   required from ‘bool Task<T>::execute_ros2(std::shared_ptr<ROS2Drone>) [with T = WayPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:170:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:38:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   38 |     device->log_info_throttle(std::chrono::milliseconds(500), "w_g_n,counter: %d, time=%s", get_counter(), timer_.elapsed() == std::numeric_limits<double>::max() ? "max" : std::to_string(timer_.elapsed()).c_str());
      |     ~~~~~~~~^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:41:31: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   41 |             (is_equal(device->get_x_pos(), parameters_.center_x + (parameters_.scope_length * way_point_[get_counter()].x()), parameters_.accuracy) &&
      |                       ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:42:30: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   42 |             is_equal(device->get_y_pos(), parameters_.center_y + (parameters_.scope_width * way_point_[get_counter()].y()), parameters_.accuracy))
      |                      ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:54:21: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   54 |             device->log_info("w_g_n, %s点位%d x: %lf y: %lf z: %lf timeout=%s",
      |             ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:60:35: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   60 |                 (is_equal(device->get_x_pos(), x_temp, parameters_.accuracy) && is_equal(device->get_y_pos(), y_temp, parameters_.accuracy))? "true" : "false"
      |                           ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:60:98: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   60 |                 (is_equal(device->get_x_pos(), x_temp, parameters_.accuracy) && is_equal(device->get_y_pos(), y_temp, parameters_.accuracy))? "true" : "false"
      |                                                                                          ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:63:37: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   63 |                             device->send_start_setpoint_command(x_temp, y_temp, z_temp, yaw_temp); // 发送本地坐标系下的航点指令
      |                             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:65:25: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   65 |                 device->send_local_setpoint_command(x_temp, y_temp, z_temp, yaw_temp); // 发送局部坐标系下的航点指令
      |                 ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:67:25: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   67 |                 device->log_error("%s: 未知的坐标系参数", get_string().c_str());
      |                 ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp: In instantiation of ‘bool WayPointTask::end(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:110:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>; T = WayPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:171:51:   required from ‘bool Task<T>::execute_ros2(std::shared_ptr<ROS2Drone>) [with T = WayPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:170:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:79:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   79 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:80:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   80 |     device->log_info("w_g_n, %s已经全部遍历", way_point_.get_name().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp: In instantiation of ‘bool WayPointTask::init(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:91:32:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>; T = WayPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:175:54:   required from ‘bool Task<T>::execute_apm(std::shared_ptr<APMROS2Drone>) [with T = WayPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:174:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:28:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   28 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp: In instantiation of ‘bool WayPointTask::run(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:101:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>; T = WayPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:175:54:   required from ‘bool Task<T>::execute_apm(std::shared_ptr<APMROS2Drone>) [with T = WayPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:174:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:38:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   38 |     device->log_info_throttle(std::chrono::milliseconds(500), "w_g_n,counter: %d, time=%s", get_counter(), timer_.elapsed() == std::numeric_limits<double>::max() ? "max" : std::to_string(timer_.elapsed()).c_str());
      |     ~~~~~~~~^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:41:31: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   41 |             (is_equal(device->get_x_pos(), parameters_.center_x + (parameters_.scope_length * way_point_[get_counter()].x()), parameters_.accuracy) &&
      |                       ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:42:30: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   42 |             is_equal(device->get_y_pos(), parameters_.center_y + (parameters_.scope_width * way_point_[get_counter()].y()), parameters_.accuracy))
      |                      ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:54:21: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   54 |             device->log_info("w_g_n, %s点位%d x: %lf y: %lf z: %lf timeout=%s",
      |             ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:60:35: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   60 |                 (is_equal(device->get_x_pos(), x_temp, parameters_.accuracy) && is_equal(device->get_y_pos(), y_temp, parameters_.accuracy))? "true" : "false"
      |                           ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:60:98: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   60 |                 (is_equal(device->get_x_pos(), x_temp, parameters_.accuracy) && is_equal(device->get_y_pos(), y_temp, parameters_.accuracy))? "true" : "false"
      |                                                                                          ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:63:37: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   63 |                             device->send_start_setpoint_command(x_temp, y_temp, z_temp, yaw_temp); // 发送本地坐标系下的航点指令
      |                             ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:65:25: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   65 |                 device->send_local_setpoint_command(x_temp, y_temp, z_temp, yaw_temp); // 发送局部坐标系下的航点指令
      |                 ~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:67:25: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   67 |                 device->log_error("%s: 未知的坐标系参数", get_string().c_str());
      |                 ~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp: In instantiation of ‘bool WayPointTask::end(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:110:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>; T = WayPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:175:54:   required from ‘bool Task<T>::execute_apm(std::shared_ptr<APMROS2Drone>) [with T = WayPointTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:174:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:79:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   79 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/WayPointTask.cpp:80:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   80 |     device->log_info("w_g_n, %s已经全部遍历", way_point_.get_name().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:510: CMakeFiles/offboard_control.dir/src/offboard_control/drone/task/WayPointTask.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.h:22:44: error: ‘BlankTask::BlankTask(std::string)’ is private within this context
   22 |     BlankTask land_task = BlankTask("Blank");
      |                                            ^
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.h:4:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/BlankTask.h:14:5: note: declared private here
   14 |     BlankTask(std::string name) :
      |     ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.h: In member function ‘void RTLLandTask::set_run_result(bool)’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.h:16:9: error: ‘run_result’ was not declared in this scope; did you mean ‘set_run_result’?
   16 |         run_result = result;
      |         ^~~~~~~~~~
      |         set_run_result
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp: In member function ‘bool RTLLandTask::run(DeviceType)’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:40:50: error: ‘run_result’ was not declared in this scope; did you mean ‘set_run_result’?
   40 |     } else if (device->get_mode() == "GUIDED" && run_result) {
      |                                                  ^~~~~~~~~~
      |                                                  set_run_result
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp: In member function ‘bool RTLLandTask::end(DeviceType)’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:53:39: error: ‘EndState’ has not been declared
   53 |     device->stateMachine.transitionTo(EndState::getInstance());
      |                                       ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp: In instantiation of ‘bool RTLLandTask::init(DeviceType) [with DeviceType = std::shared_ptr<AbstractDrone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:58:102:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:30:13: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘get_state_controller’; did you mean ‘get_status_controller’?
   30 |     device->get_state_controller()->switch_mode("RTL");
      |     ~~~~~~~~^~~~~~~~~~~~~~~~~~~~
      |     get_status_controller
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp: In instantiation of ‘bool RTLLandTask::run(DeviceType) [with DeviceType = std::shared_ptr<AbstractDrone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:59:101:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:39:17: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘get_state_controller’; did you mean ‘get_status_controller’?
   39 |         device->get_state_controller()->switch_mode("GUIDED");
      |         ~~~~~~~~^~~~~~~~~~~~~~~~~~~~
      |         get_status_controller
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:43:35: error: cannot convert ‘const char [21]’ to ‘const std::chrono::milliseconds&’ {aka ‘const std::chrono::duration<long int, std::ratio<1, 1000> >&’}
   43 |         device->log_info_throttle("等待降落中...%f", timer_.elapsed());
      |                                   ^~~~~~~~~~~~~~~~~
      |                                   |
      |                                   const char [21]
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:2:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../AbstractDrone.h:304:65: note:   initializing argument 1 of ‘void AbstractDrone::log_info_throttle(const std::chrono::milliseconds&, const std::string&, ...)’
  304 |         void log_info_throttle(const std::chrono::milliseconds& wait_time, const std::string& format, ...);
      |                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp: In instantiation of ‘bool RTLLandTask::end(DeviceType) [with DeviceType = std::shared_ptr<AbstractDrone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:60:101:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:52:13: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘get_state_controller’; did you mean ‘get_status_controller’?
   52 |     device->get_state_controller()->switch_mode("LAND");
      |     ~~~~~~~~^~~~~~~~~~~~~~~~~~~~
      |     get_status_controller
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:53:13: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘stateMachine’
   53 |     device->stateMachine.transitionTo(EndState::getInstance());
      |     ~~~~~~~~^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp: In instantiation of ‘bool RTLLandTask::init(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:91:32:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>; T = RTLLandTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:171:51:   required from ‘bool Task<T>::execute_ros2(std::shared_ptr<ROS2Drone>) [with T = RTLLandTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:170:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:28:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   28 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/TaskBase.h:9,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:10,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.h:3:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:29:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   29 |     device->log_info("开始降落");
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:30:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   30 |     device->get_state_controller()->switch_mode("RTL");
      |     ~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp: In instantiation of ‘bool RTLLandTask::run(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:101:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>; T = RTLLandTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:171:51:   required from ‘bool Task<T>::execute_ros2(std::shared_ptr<ROS2Drone>) [with T = RTLLandTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:170:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:38:17: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   38 |         device->log_info("等待降落超过18秒，开始降落");
      |         ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:39:17: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   39 |         device->get_state_controller()->switch_mode("GUIDED");
      |         ~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:40:24: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   40 |     } else if (device->get_mode() == "GUIDED" && run_result) {
      |                ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:43:17: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   43 |         device->log_info_throttle("等待降落中...%f", timer_.elapsed());
      |         ~~~~~~~~^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp: In instantiation of ‘bool RTLLandTask::end(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:110:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>; T = RTLLandTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:171:51:   required from ‘bool Task<T>::execute_ros2(std::shared_ptr<ROS2Drone>) [with T = RTLLandTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:170:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:50:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   50 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:51:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   51 |     device->log_info("降落完成");
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:52:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   52 |     device->get_state_controller()->switch_mode("LAND");
      |     ~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:53:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
   53 |     device->stateMachine.transitionTo(EndState::getInstance());
      |     ~~~~~~~~^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:7:7: note: forward declaration of ‘using std::__shared_ptr_access<ROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class ROS2Drone’ {aka ‘class ROS2Drone’}
    7 | class ROS2Drone;
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp: In instantiation of ‘bool RTLLandTask::init(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:91:32:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>; T = RTLLandTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:175:54:   required from ‘bool Task<T>::execute_apm(std::shared_ptr<APMROS2Drone>) [with T = RTLLandTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:174:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:28:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   28 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:29:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   29 |     device->log_info("开始降落");
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:30:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   30 |     device->get_state_controller()->switch_mode("RTL");
      |     ~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp: In instantiation of ‘bool RTLLandTask::run(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:101:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>; T = RTLLandTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:175:54:   required from ‘bool Task<T>::execute_apm(std::shared_ptr<APMROS2Drone>) [with T = RTLLandTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:174:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:38:17: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   38 |         device->log_info("等待降落超过18秒，开始降落");
      |         ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:39:17: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   39 |         device->get_state_controller()->switch_mode("GUIDED");
      |         ~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:40:24: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   40 |     } else if (device->get_mode() == "GUIDED" && run_result) {
      |                ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:43:17: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   43 |         device->log_info_throttle("等待降落中...%f", timer_.elapsed());
      |         ~~~~~~~~^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp: In instantiation of ‘bool RTLLandTask::end(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:110:31:   required from ‘bool Task<T>::execute(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>; T = RTLLandTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:175:54:   required from ‘bool Task<T>::execute_apm(std::shared_ptr<APMROS2Drone>) [with T = RTLLandTask]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/Task.h:174:10:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:50:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   50 |     device->log_info(get_string().c_str());
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:51:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   51 |     device->log_info("降落完成");
      |     ~~~~~~~~^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:52:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   52 |     device->get_state_controller()->switch_mode("LAND");
      |     ~~~~~~~~^~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/RTLLandTask.cpp:53:13: error: invalid use of incomplete type ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
   53 |     device->stateMachine.transitionTo(EndState::getInstance());
      |     ~~~~~~~~^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/task/../../task/DeviceVisitor.h:8:7: note: forward declaration of ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’}
    8 | class APMROS2Drone;
      |       ^~~~~~~~~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:482: CMakeFiles/offboard_control.dir/src/offboard_control/drone/task/RTLLandTask.cpp.o] Error 1
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp: In member function ‘virtual void States::InitState::executeImpl() const’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:19:62: error: incomplete type ‘StateMachine<APMROS2Drone>’ used in nested name specifier
   19 |             auto& stateMachine = StateMachine<APMROS2Drone>::getInstance();
      |                                                              ^~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:21:25: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘FlyState_init’
   21 |                 owner_->FlyState_init();
      |                         ^~~~~~~~~~~~~
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:27,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/../../stateMachine/State.h:8,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:2:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:22:42: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘node’
   22 |                 RCLCPP_INFO_ONCE(owner_->node->get_logger(), "初始化完成");
      |                                          ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:22:42: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘node’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:22:17: error: template argument 1 is invalid
   22 |                 RCLCPP_INFO_ONCE(owner_->node->get_logger(), "初始化完成");
      |                 ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:22:17: error: template argument 1 is invalid
   22 |                 RCLCPP_INFO_ONCE(owner_->node->get_logger(), "初始化完成");
      |                 ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:22:17: error: template argument 1 is invalid
   22 |                 RCLCPP_INFO_ONCE(owner_->node->get_logger(), "初始化完成");
      |                 ^~~~~~~~~~~~~~~~
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/logging.hpp:24:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:22:42: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘node’
   22 |                 RCLCPP_INFO_ONCE(owner_->node->get_logger(), "初始化完成");
      |                                          ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:22:42: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘node’
   22 |                 RCLCPP_INFO_ONCE(owner_->node->get_logger(), "初始化完成");
      |                                          ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:23:29: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘debug_mode_’
   23 |                 if (owner_->debug_mode_) {
      |                             ^~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:24:46: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘node’
   24 |                     RCLCPP_INFO_ONCE(owner_->node->get_logger(), "测试模式下, 不进行起飞");
      |                                              ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:24:46: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘node’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:24:21: error: template argument 1 is invalid
   24 |                     RCLCPP_INFO_ONCE(owner_->node->get_logger(), "测试模式下, 不进行起飞");
      |                     ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:24:21: error: template argument 1 is invalid
   24 |                     RCLCPP_INFO_ONCE(owner_->node->get_logger(), "测试模式下, 不进行起飞");
      |                     ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:24:21: error: template argument 1 is invalid
   24 |                     RCLCPP_INFO_ONCE(owner_->node->get_logger(), "测试模式下, 不进行起飞");
      |                     ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:24:46: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘node’
   24 |                     RCLCPP_INFO_ONCE(owner_->node->get_logger(), "测试模式下, 不进行起飞");
      |                                              ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:24:46: error: ‘using std::__shared_ptr_access<AbstractDrone, __gnu_cxx::_S_atomic, false, false>::element_type = class AbstractDrone’ {aka ‘class AbstractDrone’} has no member named ‘node’
   24 |                     RCLCPP_INFO_ONCE(owner_->node->get_logger(), "测试模式下, 不进行起飞");
      |                                              ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:25:35: error: ‘GotoShotPointState’ has not been declared
   25 |                     transition_to(GotoShotPointState::getInstance());
      |                                   ^~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:28:31: error: ‘TakeoffState’ has not been declared
   28 |                 transition_to(TakeoffState::getInstance());
      |                               ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/../../stateMachine/State.h: In instantiation of ‘State<T>::State(const std::string&, int) [with T = AbstractDrone; std::string = std::__cxx11::basic_string<char>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/State.cpp:33:38:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/../../stateMachine/State.h:132:66: error: incomplete type ‘StateMachine<AbstractDrone>’ used in nested name specifier
  132 |                 auto& stateMachine = StateMachine<T>::getInstance();
      |                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/../../stateMachine/State.h: In instantiation of ‘std::future<void> State<T>::executeAsync() const [with T = AbstractDrone]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/../../stateMachine/State.h:76:28:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/../../stateMachine/State.h:78:66: error: incomplete type ‘StateMachine<AbstractDrone>’ used in nested name specifier
   78 |                 auto& stateMachine = StateMachine<T>::getInstance();
      |                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:454: CMakeFiles/offboard_control.dir/src/offboard_control/drone/state/State.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/states.h:3,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:2:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.h:7:11: error: redefinition of ‘class States::InitState’
    7 |     class InitState : public State<AbstractDrone> {
      |           ^~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.h:7:11: note: previous definition of ‘class States::InitState’
    7 |     class InitState : public State<AbstractDrone> {
      |           ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:4:6: error: ‘InitState’ has not been declared
    4 | void InitState::executeImpl() const override {
      |      ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:4:37: error: virt-specifiers in ‘executeImpl’ not allowed outside a class definition
    4 | void InitState::executeImpl() const override {
      |                                     ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:4:37: error: non-member function ‘void executeImpl()’ cannot have cv-qualifier
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp: In function ‘void executeImpl()’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:7:54: error: incomplete type ‘StateMachine<APMROS2Drone>’ used in nested name specifier
    7 |     auto& stateMachine = StateMachine<APMROS2Drone>::getInstance();
      |                                                      ^~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:8:43: error: ‘InitState’ has not been declared
    8 |     if (stateMachine.getCurrentState() == InitState::getInstance()) {
      |                                           ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:9:9: error: ‘owner_’ was not declared in this scope
    9 |         owner_->FlyState_init();
      |         ^~~~~~
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:27,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/../../stateMachine/State.h:8,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.h:2:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:10:9: error: template argument 1 is invalid
   10 |         RCLCPP_INFO_ONCE(owner_->node->get_logger(), "初始化完成");
      |         ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:10:9: error: template argument 1 is invalid
   10 |         RCLCPP_INFO_ONCE(owner_->node->get_logger(), "初始化完成");
      |         ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:10:9: error: template argument 1 is invalid
   10 |         RCLCPP_INFO_ONCE(owner_->node->get_logger(), "初始化完成");
      |         ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:12:13: error: template argument 1 is invalid
   12 |             RCLCPP_INFO_ONCE(owner_->node->get_logger(), "测试模式下, 不进行起飞");
      |             ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:12:13: error: template argument 1 is invalid
   12 |             RCLCPP_INFO_ONCE(owner_->node->get_logger(), "测试模式下, 不进行起飞");
      |             ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:12:13: error: template argument 1 is invalid
   12 |             RCLCPP_INFO_ONCE(owner_->node->get_logger(), "测试模式下, 不进行起飞");
      |             ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:13:27: error: ‘GotoShotPointState’ has not been declared
   13 |             transition_to(GotoShotPointState::getInstance());
      |                           ^~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:13:13: error: ‘transition_to’ was not declared in this scope
   13 |             transition_to(GotoShotPointState::getInstance());
      |             ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:16:23: error: ‘TakeoffState’ has not been declared
   16 |         transition_to(TakeoffState::getInstance());
      |                       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.cpp:16:9: error: ‘transition_to’ was not declared in this scope
   16 |         transition_to(TakeoffState::getInstance());
      |         ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/../../stateMachine/State.h: In instantiation of ‘State<T>::State(const std::string&, int) [with T = AbstractDrone; std::string = std::__cxx11::basic_string<char>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/InitState.h:18:38:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/../../stateMachine/State.h:132:66: error: incomplete type ‘StateMachine<AbstractDrone>’ used in nested name specifier
  132 |                 auto& stateMachine = StateMachine<T>::getInstance();
      |                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/../../stateMachine/State.h: In instantiation of ‘std::future<void> State<T>::executeAsync() const [with T = AbstractDrone]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/../../stateMachine/State.h:76:28:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/drone/state/../../stateMachine/State.h:78:66: error: incomplete type ‘StateMachine<AbstractDrone>’ used in nested name specifier
   78 |                 auto& stateMachine = StateMachine<T>::getInstance();
      |                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:440: CMakeFiles/offboard_control.dir/src/offboard_control/drone/state/InitState.cpp.o] Error 1
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp: In member function ‘bool DoLandTask::init(DeviceType)’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:42:14: error: ‘class std::shared_ptr<Task<AppochTargetTask> >’ has no member named ‘setParameters’
   42 |         task.setParameters(
      |              ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:43:41: error: expected primary-expression before ‘(’ token
   43 |             AppochTargetTask::Parameters(
      |                                         ^
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:44:24: error: expected unqualified-id before ‘.’ token
   44 |             parameters..)
      |                        ^
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:44:25: error: expected unqualified-id before ‘)’ token
   44 |             parameters..)
      |                         ^
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:49:14: error: ‘class std::shared_ptr<Task<AppochTargetTask> >’ has no member named ‘setParameters’
   49 |         task.setParameters(
      |              ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp: In member function ‘bool DoLandTask::run(DeviceType)’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:82:81: error: ‘target’ was not declared in this scope
   82 |         if (timer_.elapsed() > 19 || surround_land > 3 || device->get_z_pos() < target.z + 0.1) // 降落时间超过39秒，或者降落高度小于目标高度
      |                                                                                 ^~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:103:22: error: ‘class std::shared_ptr<Task<AppochTargetTask> >’ has no member named ‘execute_apm’
  103 |             if (task.execute_apm(device))
      |                      ^~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:114:52: error: ‘t2p_target’ was not declared in this scope
  114 |         device->get_yolo_detector()->append_target(t2p_target); // 将目标添加到YOLO中准备发布
      |                                                    ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp: In instantiation of ‘bool DoLandTask::init(DeviceType) [with DeviceType = std::shared_ptr<AbstractDrone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:136:101:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:43:31: error: ‘struct AppochTargetTask::Parameters’ is private within this context
   43 |             AppochTargetTask::Parameters(
      |                               ^~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.h:7,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.h:35:12: note: declared private here
   35 |     struct Parameters{
      |            ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:50:31: error: ‘struct AppochTargetTask::Parameters’ is private within this context
   50 |             AppochTargetTask::Parameters(
      |                               ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.h:35:12: note: declared private here
   35 |     struct Parameters{
      |            ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp: In instantiation of ‘bool DoLandTask::init(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:140:93:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:43:31: error: ‘struct AppochTargetTask::Parameters’ is private within this context
   43 |             AppochTargetTask::Parameters(
      |                               ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.h:35:12: note: declared private here
   35 |     struct Parameters{
      |            ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:50:31: error: ‘struct AppochTargetTask::Parameters’ is private within this context
   50 |             AppochTargetTask::Parameters(
      |                               ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.h:35:12: note: declared private here
   35 |     struct Parameters{
      |            ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp: In instantiation of ‘bool DoLandTask::init(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:144:99:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:43:31: error: ‘struct AppochTargetTask::Parameters’ is private within this context
   43 |             AppochTargetTask::Parameters(
      |                               ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.h:35:12: note: declared private here
   35 |     struct Parameters{
      |            ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoLandTask.cpp:50:31: error: ‘struct AppochTargetTask::Parameters’ is private within this context
   50 |             AppochTargetTask::Parameters(
      |                               ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.h:35:12: note: declared private here
   35 |     struct Parameters{
      |            ^~~~~~~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:314: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/task/DoLandTask.cpp.o] Error 1
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp: In member function ‘bool AppochTargetTask::init(DeviceType)’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:69:52: error: ‘tar_z’ was not declared in this scope
   69 |             target.z = (is_equal(target.z, 0.0f) ? tar_z : target.z);
      |                                                    ^~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:78:19: error: ‘class AppochTargetTask’ has no member named ‘image_targets’
   78 |             this->image_targets.push_back(target);
      |                   ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:83:31: error: ‘shot_duration’ was not declared in this scope; did you mean ‘find_duration’?
   83 |             radius, accuracy, shot_duration, shot_wait
      |                               ^~~~~~~~~~~~~
      |                               find_duration
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:83:46: error: ‘shot_wait’ was not declared in this scope
   83 |             radius, accuracy, shot_duration, shot_wait
      |                                              ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp: In member function ‘bool AppochTargetTask::run(DeviceType)’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:118:61: error: ‘image_targets’ was not declared in this scope
  118 |         if (parameters.config_device_name_suffix.empty() && image_targets.empty()) {
      |                                                             ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:124:72: error: ‘image_targets’ was not declared in this scope
  124 |         if (parameters.device_index < 0 || (parameters.device_index >= image_targets.size() &&
      |                                                                        ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:132:38: error: ‘class AppochTargetTask’ has no member named ‘image_targets’
  132 |         for (size_t i = 0; i < this->image_targets.size(); i++)
      |                                      ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:134:19: error: ‘class AppochTargetTask’ has no member named ‘image_targets’
  134 |             this->image_targets[i].r = 1.0f; // 设置所有目标颜色为红色
      |                   ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:135:19: error: ‘class AppochTargetTask’ has no member named ‘image_targets’
  135 |             this->image_targets[i].g = 0.0f;
      |                   ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:136:19: error: ‘class AppochTargetTask’ has no member named ‘image_targets’
  136 |             this->image_targets[i].b = 0.0f;
      |                   ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:137:19: error: ‘class AppochTargetTask’ has no member named ‘image_targets’
  137 |             this->image_targets[i].relative_z = device->get_camera_gimbal()->get_position().z() - parameters.target_height; // 设置目标的高度为相机高度
      |                   ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:142:50: error: ‘class AppochTargetTask’ has no member named ‘image_targets’
  142 |         YOLODetector::Target temp_target = this->image_targets[0];
      |                                                  ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:143:32: error: ‘_camera_gimbal’ was not declared in this scope; did you mean ‘CameraGimbal’?
  143 |         auto shot_target_opt = _camera_gimbal->worldToPixel(getCurrentTargets());
      |                                ^~~~~~~~~~~~~~
      |                                CameraGimbal
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:155:47: error: ‘image_targets’ was not declared in this scope; did you mean ‘t2p_targets’?
  155 |             YOLODetector::Target t2p_target = image_targets[0];
      |                                               ^~~~~~~~~~~~~
      |                                               t2p_targets
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:193:46: error: ‘image_targets’ was not declared in this scope; did you mean ‘t2p_targets’?
  193 |         } else if (parameters.device_index < image_targets.size()) {     // 使用读取的对应目标
      |                                              ^~~~~~~~~~~~~
      |                                              t2p_targets
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp: In instantiation of ‘bool AppochTargetTask::run(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:253:104:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:102:44: error: ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’} has no member named ‘get_pos_z’; did you mean ‘get_pos_3f’?
  102 |             if (is_equal(target_z, device->get_pos_z(), 0.40)) {
      |                                    ~~~~~~~~^~~~~~~~~
      |                                    get_pos_3f
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:105:42: error: ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’} has no member named ‘get_pos_z’; did you mean ‘get_pos_3f’?
  105 |                 target_z = 0.8 * device->get_pos_z() + target.z() + (device->get_pos_z() - target.z() > 0) ? -0.1 : +0.1;
      |                                  ~~~~~~~~^~~~~~~~~
      |                                  get_pos_3f
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:105:78: error: ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’} has no member named ‘get_pos_z’; did you mean ‘get_pos_3f’?
  105 |                 target_z = 0.8 * device->get_pos_z() + target.z() + (device->get_pos_z() - target.z() > 0) ? -0.1 : +0.1;
      |                                                                      ~~~~~~~~^~~~~~~~~
      |                                                                      get_pos_3f
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:108:44: error: ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’} has no member named ‘get_pos_z’; did you mean ‘get_pos_3f’?
  108 |             if (is_equal(target_z, device->get_pos_z(), 0.10)) {
      |                                    ~~~~~~~~^~~~~~~~~
      |                                    get_pos_3f
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp:164:25: error: ‘using std::__shared_ptr_access<APMROS2Drone, __gnu_cxx::_S_atomic, false, false>::element_type = class APMROS2Drone’ {aka ‘class APMROS2Drone’} has no member named ‘get_target_position’
  164 |                 device->get_target_position().z() + this->device_position[i].z()
      |                 ~~~~~~~~^~~~~~~~~~~~~~~~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:300: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/task/AppochTargetTask.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TakeoffState.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TakeoffState.h:6:7: error: redefinition of ‘class TakeoffState’
    6 | class TakeoffState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/states.h:12,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:18,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TakeoffState.h:3:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/TakeoffState.h:6:7: note: previous definition of ‘class TakeoffState’
    6 | class TakeoffState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TakeoffState.cpp:4:40: error: virt-specifiers in ‘executeImpl’ not allowed outside a class definition
    4 | void TakeoffState::executeImpl() const override {
      |                                        ^~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:19:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h: In instantiation of ‘void StateMachine<T>::setCurrentState(const State<T>&) [with T = APMROS2Drone]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:249:9:   required from ‘void StateMachine<T>::transitionTo(const State<T>&) [with T = APMROS2Drone]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TakeoffState.cpp:13:42:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:236:18: error: use of deleted function ‘State<T>::State(const State<T>&) [with T = APMROS2Drone]’
  236 |             auto previousState = getState(previous_state_name_);
      |                  ^~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TakeoffState.h:2:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:137:9: note: declared here
  137 |         State(const State&) = delete;
      |         ^~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:272: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/TakeoffState.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/GotoScoutPointState.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.h:5:7: error: redefinition of ‘class DoshotState’
    5 | class DoshotState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/states.h:4,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:18,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.h:3:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/DoshotState.h:5:7: note: previous definition of ‘class DoshotState’
    5 | class DoshotState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/GotoScoutPointState.cpp:4:47: error: virt-specifiers in ‘executeImpl’ not allowed outside a class definition
    4 | void GotoScoutPointState::executeImpl() const override {
      |                                               ^~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:19:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h: In instantiation of ‘void StateMachine<T>::setCurrentState(const State<T>&) [with T = APMROS2Drone]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:249:9:   required from ‘void StateMachine<T>::transitionTo(const State<T>&) [with T = APMROS2Drone]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/GotoScoutPointState.cpp:16:38:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:236:18: error: use of deleted function ‘State<T>::State(const State<T>&) [with T = APMROS2Drone]’
  236 |             auto previousState = getState(previous_state_name_);
      |                  ^~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.h:2:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:137:9: note: declared here
  137 |         State(const State&) = delete;
      |         ^~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:188: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/GotoScoutPointState.cpp.o] Error 1
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp: In member function ‘bool DoShotTask::init(DeviceType)’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp:41:14: error: ‘class std::shared_ptr<Task<AppochTargetTask> >’ has no member named ‘setParameters’
   41 |         task.setParameters(
      |              ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp: In member function ‘bool DoShotTask::run(DeviceType)’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp:81:23: error: ‘class std::shared_ptr<Task<AppochTargetTask> >’ has no member named ‘execute_apm’
   81 |         else if (task.execute_apm(device))
      |                       ^~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp:92:36: error: ‘shot_index_target’ was not declared in this scope
   92 |                     shot_duration, shot_index_target.x, shot_index_target.y, shot_index_target.z, parameters.target_yaw);
      |                                    ^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp:94:64: error: ‘parameter’ was not declared in this scope; did you mean ‘parameters’?
   94 |                 device->get_servo_controller()->set_servo(11 + parameter.device_index, device->get_servo_controller()->get_servo_open_position()); // 设置舵机位置，投弹
      |                                                                ^~~~~~~~~
      |                                                                parameters
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp:101:68: error: ‘parameter’ was not declared in this scope; did you mean ‘parameters’?
  101 |                     device->get_servo_controller()->set_servo(11 + parameter.device_index, device->get_servo_controller()->get_servo_open_position()); // 重复投弹
      |                                                                    ^~~~~~~~~
      |                                                                    parameters
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp: In instantiation of ‘bool DoShotTask::init(DeviceType) [with DeviceType = std::shared_ptr<AbstractDrone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp:139:101:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp:42:31: error: ‘struct AppochTargetTask::Parameters’ is private within this context
   42 |             AppochTargetTask::Parameters(
      |                               ^~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.h:7,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.h:35:12: note: declared private here
   35 |     struct Parameters{
      |            ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp: In instantiation of ‘bool DoShotTask::init(DeviceType) [with DeviceType = std::shared_ptr<ROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp:143:93:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp:42:31: error: ‘struct AppochTargetTask::Parameters’ is private within this context
   42 |             AppochTargetTask::Parameters(
      |                               ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.h:35:12: note: declared private here
   35 |     struct Parameters{
      |            ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp: In instantiation of ‘bool DoShotTask::init(DeviceType) [with DeviceType = std::shared_ptr<APMROS2Drone>]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp:147:99:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/DoShotTask.cpp:42:31: error: ‘struct AppochTargetTask::Parameters’ is private within this context
   42 |             AppochTargetTask::Parameters(
      |                               ^~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/task/AppochTargetTask.h:35:12: note: declared private here
   35 |     struct Parameters{
      |            ^~~~~~~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:328: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/task/DoShotTask.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/StopState.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/StopState.h:6:7: error: redefinition of ‘class StopState’
    6 | class StopState : public State<APMROS2Drone> {
      |       ^~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/states.h:10,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:18,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/StopState.h:3:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/StopState.h:6:7: note: previous definition of ‘class StopState’
    6 | class StopState : public State<APMROS2Drone> {
      |       ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/StopState.cpp:4:37: error: virt-specifiers in ‘executeImpl’ not allowed outside a class definition
    4 | void StopState::executeImpl() const override {
      |                                     ^~~~~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:244: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/StopState.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DolandState.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/SurroundSeeState.h:6:7: error: redefinition of ‘class SurroundSeeState’
    6 | class SurroundSeeState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/states.h:11,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:18,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/SurroundSeeState.h:3:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/SurroundSeeState.h:6:7: note: previous definition of ‘class SurroundSeeState’
    6 | class SurroundSeeState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DolandState.cpp:4:39: error: virt-specifiers in ‘executeImpl’ not allowed outside a class definition
    4 | void DolandState::executeImpl() const override {
      |                                       ^~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:19:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h: In instantiation of ‘void StateMachine<T>::setCurrentState(const State<T>&) [with T = APMROS2Drone]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:249:9:   required from ‘void StateMachine<T>::transitionTo(const State<T>&) [with T = APMROS2Drone]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DolandState.cpp:45:42:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:236:18: error: use of deleted function ‘State<T>::State(const State<T>&) [with T = APMROS2Drone]’
  236 |             auto previousState = getState(previous_state_name_);
      |                  ^~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/SurroundSeeState.h:2:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:137:9: note: declared here
  137 |         State(const State&) = delete;
      |         ^~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:146: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/DolandState.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TerminalControlState.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TerminalControlState.h:6:7: error: redefinition of ‘class TerminalControlState’
    6 | class TerminalControlState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/states.h:13,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:18,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TerminalControlState.h:3:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/TerminalControlState.h:6:7: note: previous definition of ‘class TerminalControlState’
    6 | class TerminalControlState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TerminalControlState.cpp:4:48: error: virt-specifiers in ‘executeImpl’ not allowed outside a class definition
    4 | void TerminalControlState::executeImpl() const override {
      |                                                ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TerminalControlState.cpp: In member function ‘virtual void TerminalControlState::executeImpl() const’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TerminalControlState.cpp:11:9: error: ‘key’ was not declared in this scope
   11 |         key = _getch(); // 获取按键输入
      |         ^~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TerminalControlState.cpp:22:17: error: ‘stateMachine’ was not declared in this scope; did you mean ‘StateMachine’?
   22 |                 stateMachine.transitionTo(EndState::getInstance()); // 切换到结束状态
      |                 ^~~~~~~~~~~~
      |                 StateMachine
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/TerminalControlState.cpp:38:38: error: no matching function for call to ‘StateMachine<APMROS2Drone>::transitionTo(const State<APMROS2Drone>* const&)’
   38 |             stateMachine.transitionTo(it->second);
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:19:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:242:10: note: candidate: ‘void StateMachine<T>::transitionTo(const std::string&) [with T = APMROS2Drone; std::string = std::__cxx11::basic_string<char>]’
  242 |     void transitionTo(const std::string& stateName) {
      |          ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:242:42: note:   no known conversion for argument 1 from ‘const State<APMROS2Drone>* const’ to ‘const std::string&’ {aka ‘const std::__cxx11::basic_string<char>&’}
  242 |     void transitionTo(const std::string& stateName) {
      |                       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:247:10: note: candidate: ‘void StateMachine<T>::transitionTo(const State<T>&) [with T = APMROS2Drone]’
  247 |     void transitionTo(const State<T>& state) {
      |          ^~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:247:39: note:   no known conversion for argument 1 from ‘const State<APMROS2Drone>* const’ to ‘const State<APMROS2Drone>&’
  247 |     void transitionTo(const State<T>& state) {
      |                       ~~~~~~~~~~~~~~~~^~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:286: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/TerminalControlState.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/states.h:8,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.cpp:2:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.h:7:11: error: redefinition of ‘class InitState’
    7 |     class InitState : public State<APMROS2Drone> {
      |           ^~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.h:7:11: note: previous definition of ‘class InitState’
    7 |     class InitState : public State<APMROS2Drone> {
      |           ^~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.cpp:4:37: error: virt-specifiers in ‘executeImpl’ not allowed outside a class definition
    4 | void InitState::executeImpl() const override {
      |                                     ^~~~~~~~
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/copy_all_parameter_values.hpp:27,
                 from /opt/ros/jazzy/include/rclcpp/rclcpp/rclcpp.hpp:171,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:8,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.h:2:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.cpp: In member function ‘virtual void InitState::executeImpl() const’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.cpp:10:9: error: ‘rclcpp::Node::SharedPtr ROS2Drone::node’ is protected within this context
   10 |         RCLCPP_INFO_ONCE(owner_->node->get_logger(), "初始化完成");
      |         ^~~~~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/../APMROS2drone/task/../../module/YOLODetector.h:22,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/../APMROS2drone/task/AppochTargetTask.h:8,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/../APMROS2drone/task/tasks.h:4,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/tasks.h:5,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:16:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/../APMROS2drone/task/../../module/../ROS2drone/ROS2Drone.h:122:33: note: declared protected here
  122 |         rclcpp::Node::SharedPtr node;
      |                                 ^~~~
In file included from /opt/ros/jazzy/include/rclcpp/rclcpp/logging.hpp:24:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.cpp:10:34: error: ‘rclcpp::Node::SharedPtr ROS2Drone::node’ is protected within this context
   10 |         RCLCPP_INFO_ONCE(owner_->node->get_logger(), "初始化完成");
      |                                  ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/../APMROS2drone/task/../../module/../ROS2drone/ROS2Drone.h:122:33: note: declared protected here
  122 |         rclcpp::Node::SharedPtr node;
      |                                 ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.cpp:10:34: error: ‘rclcpp::Node::SharedPtr ROS2Drone::node’ is protected within this context
   10 |         RCLCPP_INFO_ONCE(owner_->node->get_logger(), "初始化完成");
      |                                  ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/../APMROS2drone/task/../../module/../ROS2drone/ROS2Drone.h:122:33: note: declared protected here
  122 |         rclcpp::Node::SharedPtr node;
      |                                 ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.cpp:12:13: error: ‘rclcpp::Node::SharedPtr ROS2Drone::node’ is protected within this context
   12 |             RCLCPP_INFO_ONCE(owner_->node->get_logger(), "测试模式下, 不进行起飞");
      |             ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/../APMROS2drone/task/../../module/../ROS2drone/ROS2Drone.h:122:33: note: declared protected here
  122 |         rclcpp::Node::SharedPtr node;
      |                                 ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.cpp:12:38: error: ‘rclcpp::Node::SharedPtr ROS2Drone::node’ is protected within this context
   12 |             RCLCPP_INFO_ONCE(owner_->node->get_logger(), "测试模式下, 不进行起飞");
      |                                      ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/../APMROS2drone/task/../../module/../ROS2drone/ROS2Drone.h:122:33: note: declared protected here
  122 |         rclcpp::Node::SharedPtr node;
      |                                 ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.cpp:12:38: error: ‘rclcpp::Node::SharedPtr ROS2Drone::node’ is protected within this context
   12 |             RCLCPP_INFO_ONCE(owner_->node->get_logger(), "测试模式下, 不进行起飞");
      |                                      ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/../APMROS2drone/task/../../module/../ROS2drone/ROS2Drone.h:122:33: note: declared protected here
  122 |         rclcpp::Node::SharedPtr node;
      |                                 ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h: In instantiation of ‘void State<T>::transition_to(const State<T>&) const [with T = APMROS2Drone]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/InitState.cpp:13:26:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:113:37: error: ‘rclcpp::Node::SharedPtr ROS2Drone::node’ is protected within this context
  113 |                 RCLCPP_INFO(owner_->node->get_logger(), "状态转换: %s -> %s",
      |                             ~~~~~~~~^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/../APMROS2drone/task/../../module/../ROS2drone/ROS2Drone.h:122:33: note: declared protected here
  122 |         rclcpp::Node::SharedPtr node;
      |                                 ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:113:37: error: ‘rclcpp::Node::SharedPtr ROS2Drone::node’ is protected within this context
  113 |                 RCLCPP_INFO(owner_->node->get_logger(), "状态转换: %s -> %s",
      |                             ~~~~~~~~^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/../APMROS2drone/task/../../module/../ROS2drone/ROS2Drone.h:122:33: note: declared protected here
  122 |         rclcpp::Node::SharedPtr node;
      |                                 ^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:113:37: error: ‘rclcpp::Node::SharedPtr ROS2Drone::node’ is protected within this context
  113 |                 RCLCPP_INFO(owner_->node->get_logger(), "状态转换: %s -> %s",
      |                             ~~~~~~~~^~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/../task/../APMROS2drone/task/../../module/../ROS2drone/ROS2Drone.h:122:33: note: declared protected here
  122 |         rclcpp::Node::SharedPtr node;
      |                                 ^~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:216: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/InitState.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.h:5:7: error: redefinition of ‘class DoshotState’
    5 | class DoshotState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/states.h:4,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:18,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.h:3:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/DoshotState.h:5:7: note: previous definition of ‘class DoshotState’
    5 | class DoshotState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:4:39: error: virt-specifiers in ‘executeImpl’ not allowed outside a class definition
    4 | void DoshotState::executeImpl() const override {
      |                                       ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp: In member function ‘virtual void DoshotState::executeImpl() const’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:41:24: error: call to non-‘constexpr’ function ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’
   41 |             case owner_->DoshotState::doshot_init: // 初始化投弹状态
      |                        ^~
In file included from /usr/include/c++/13/bits/shared_ptr.h:53,
                 from /usr/include/c++/13/memory:80,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:2,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.h:2:
/usr/include/c++/13/bits/shared_ptr_base.h:1354:7: note: ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’ declared here
 1354 |       operator->() const noexcept
      |       ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:41:24: error: call to non-‘constexpr’ function ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’
   41 |             case owner_->DoshotState::doshot_init: // 初始化投弹状态
      |                        ^~
/usr/include/c++/13/bits/shared_ptr_base.h:1354:7: note: ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’ declared here
 1354 |       operator->() const noexcept
      |       ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:86:24: error: call to non-‘constexpr’ function ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’
   86 |             case owner_->DoshotState::doshot_shot: // 投弹
      |                        ^~
/usr/include/c++/13/bits/shared_ptr_base.h:1354:7: note: ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’ declared here
 1354 |       operator->() const noexcept
      |       ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:86:24: error: call to non-‘constexpr’ function ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’
   86 |             case owner_->DoshotState::doshot_shot: // 投弹
      |                        ^~
/usr/include/c++/13/bits/shared_ptr_base.h:1354:7: note: ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’ declared here
 1354 |       operator->() const noexcept
      |       ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:99:52: error: ‘std::shared_ptr<CameraGimbal> APMROS2Drone::_camera_gimbal’ is private within this context
   99 |                     auto shot_center_opt = owner_->_camera_gimbal->worldToPixel(world_point);
      |                                                    ^~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:361:39: note: declared private here
  361 |         std::shared_ptr<CameraGimbal> _camera_gimbal;
      |                                       ^~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:104:50: error: ‘std::shared_ptr<CameraGimbal> APMROS2Drone::_camera_gimbal’ is private within this context
  104 |                         temp_target.fx = owner_->_camera_gimbal->fx;
      |                                                  ^~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:361:39: note: declared private here
  361 |         std::shared_ptr<CameraGimbal> _camera_gimbal;
      |                                       ^~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:107:58: error: ‘std::shared_ptr<CameraGimbal> APMROS2Drone::_camera_gimbal’ is private within this context
  107 |                         temp_target.relative_z = owner_->_camera_gimbal->get_position().z() - world_point.z(); // 设置目标的高度为相机高度
      |                                                          ^~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:361:39: note: declared private here
  361 |         std::shared_ptr<CameraGimbal> _camera_gimbal;
      |                                       ^~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:153:29: error: ‘std::shared_ptr<ServoController> APMROS2Drone::_servo_controller’ is private within this context
  153 |                     owner_->_servo_controller->set_servo(10 + shot_counter, owner_->servo_open_position);
      |                             ^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:357:42: note: declared private here
  357 |         std::shared_ptr<ServoController> _servo_controller;
      |                                          ^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:183:24: error: call to non-‘constexpr’ function ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’
  183 |             case owner_->DoshotState::doshot_wait: // 等待再次投弹
      |                        ^~
/usr/include/c++/13/bits/shared_ptr_base.h:1354:7: note: ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’ declared here
 1354 |       operator->() const noexcept
      |       ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:183:24: error: call to non-‘constexpr’ function ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’
  183 |             case owner_->DoshotState::doshot_wait: // 等待再次投弹
      |                        ^~
/usr/include/c++/13/bits/shared_ptr_base.h:1354:7: note: ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’ declared here
 1354 |       operator->() const noexcept
      |       ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:217:24: error: call to non-‘constexpr’ function ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’
  217 |             case owner_->DoshotState::doshot_end: // 侦查投弹区
      |                        ^~
/usr/include/c++/13/bits/shared_ptr_base.h:1354:7: note: ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’ declared here
 1354 |       operator->() const noexcept
      |       ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:217:24: error: call to non-‘constexpr’ function ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’
  217 |             case owner_->DoshotState::doshot_end: // 侦查投弹区
      |                        ^~
/usr/include/c++/13/bits/shared_ptr_base.h:1354:7: note: ‘std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::element_type* std::__shared_ptr_access<_Tp, _Lp, <anonymous>, <anonymous> >::operator->() const [with _Tp = APMROS2Drone; __gnu_cxx::_Lock_policy _Lp = __gnu_cxx::_S_atomic; bool <anonymous> = false; bool <anonymous> = false; element_type = APMROS2Drone]’ declared here
 1354 |       operator->() const noexcept
      |       ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:222:33: error: ‘std::shared_ptr<ServoController> APMROS2Drone::_servo_controller’ is private within this context
  222 |                         owner_->_servo_controller->set_servo(11, ServoController::servo_open_position);                 // owner_->_servo_controller->set_servo(11, owner_->servo_close_position);
      |                                 ^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:357:42: note: declared private here
  357 |         std::shared_ptr<ServoController> _servo_controller;
      |                                          ^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:222:83: error: ‘float ServoController::servo_open_position’ is private within this context
  222 |                         owner_->_servo_controller->set_servo(11, ServoController::servo_open_position);                 // owner_->_servo_controller->set_servo(11, owner_->servo_close_position);
      |                                                                                   ^~~~~~~~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:20:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../module/ServoController.h:102:11: note: declared private here
  102 |     float servo_open_position;
      |           ^~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:222:83: error: invalid use of non-static data member ‘ServoController::servo_open_position’
  222 |                         owner_->_servo_controller->set_servo(11, ServoController::servo_open_position);                 // owner_->_servo_controller->set_servo(11, owner_->servo_close_position);
      |                                                                                   ^~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../module/ServoController.h:102:11: note: declared here
  102 |     float servo_open_position;
      |           ^~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:223:33: error: ‘std::shared_ptr<ServoController> APMROS2Drone::_servo_controller’ is private within this context
  223 |                         owner_->_servo_controller->set_servo(12, ServoController::servo_open_position);                         // owner_->_servo_controller->set_servo(12, owner_->servo_close_position);
      |                                 ^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:357:42: note: declared private here
  357 |         std::shared_ptr<ServoController> _servo_controller;
      |                                          ^~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:223:83: error: ‘float ServoController::servo_open_position’ is private within this context
  223 |                         owner_->_servo_controller->set_servo(12, ServoController::servo_open_position);                         // owner_->_servo_controller->set_servo(12, owner_->servo_close_position);
      |                                                                                   ^~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../module/ServoController.h:102:11: note: declared private here
  102 |     float servo_open_position;
      |           ^~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:223:83: error: invalid use of non-static data member ‘ServoController::servo_open_position’
  223 |                         owner_->_servo_controller->set_servo(12, ServoController::servo_open_position);                         // owner_->_servo_controller->set_servo(12, owner_->servo_close_position);
      |                                                                                   ^~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../module/ServoController.h:102:11: note: declared here
  102 |     float servo_open_position;
      |           ^~~~~~~~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:19:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h: In instantiation of ‘void StateMachine<T>::setCurrentState(const State<T>&) [with T = APMROS2Drone]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:249:9:   required from ‘void StateMachine<T>::transitionTo(const State<T>&) [with T = APMROS2Drone]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DoshotState.cpp:229:42:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:236:18: error: use of deleted function ‘State<T>::State(const State<T>&) [with T = APMROS2Drone]’
  236 |             auto previousState = getState(previous_state_name_);
      |                  ^~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:137:9: note: declared here
  137 |         State(const State&) = delete;
      |         ^~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:160: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/DoshotState.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/SurroundSeeState.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/SurroundSeeState.h:6:7: error: redefinition of ‘class SurroundSeeState’
    6 | class SurroundSeeState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/states.h:11,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:18,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/SurroundSeeState.h:3:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/SurroundSeeState.h:6:7: note: previous definition of ‘class SurroundSeeState’
    6 | class SurroundSeeState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/SurroundSeeState.cpp:4:44: error: virt-specifiers in ‘executeImpl’ not allowed outside a class definition
    4 | void SurroundSeeState::executeImpl() const override {
      |                                            ^~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:19:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h: In instantiation of ‘void StateMachine<T>::setCurrentState(const State<T>&) [with T = APMROS2Drone]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:249:9:   required from ‘void StateMachine<T>::transitionTo(const State<T>&) [with T = APMROS2Drone]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/SurroundSeeState.cpp:19:38:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:236:18: error: use of deleted function ‘State<T>::State(const State<T>&) [with T = APMROS2Drone]’
  236 |             auto previousState = getState(previous_state_name_);
      |                  ^~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/SurroundSeeState.h:2:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:137:9: note: declared here
  137 |         State(const State&) = delete;
      |         ^~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:258: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/SurroundSeeState.cpp.o] Error 1
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/APMROS2Drone.cpp: In member function ‘virtual void APMROS2Drone::timer_callback()’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/APMROS2Drone.cpp:167:58: error: ‘getInstance’ is not a member of ‘APMROS2Drone::DoshotState’
  167 |         state_machine_.getCurrentState() == DoshotState::getInstance() ||
      |                                                          ^~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/APMROS2Drone.h:19,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/APMROS2Drone.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/../stateMachine/StateMachine.h: In instantiation of ‘void StateMachine<T>::setCurrentState(const State<T>&) [with T = APMROS2Drone]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/../stateMachine/StateMachine.h:244:9:   required from ‘void StateMachine<T>::transitionTo(const std::string&) [with T = APMROS2Drone; std::string = std::__cxx11::basic_string<char>]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/APMROS2Drone.cpp:224:30:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/../stateMachine/StateMachine.h:236:18: error: use of deleted function ‘State<T>::State(const State<T>&) [with T = APMROS2Drone]’
  236 |             auto previousState = getState(previous_state_name_);
      |                  ^~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/DolandState.h:2,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/states.h:3,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/APMROS2Drone.h:18:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:137:9: note: declared here
  137 |         State(const State&) = delete;
      |         ^~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:76: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/APMROS2Drone.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/ReflushConfigState.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/ReflushConfigState.h:6:7: error: redefinition of ‘class ReflushConfigState’
    6 | class ReflushConfigState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/states.h:9,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:18,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/ReflushConfigState.h:3:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/ReflushConfigState.h:6:7: note: previous definition of ‘class ReflushConfigState’
    6 | class ReflushConfigState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/ReflushConfigState.cpp:4:46: error: virt-specifiers in ‘executeImpl’ not allowed outside a class definition
    4 | void ReflushConfigState::executeImpl() const override {
      |                                              ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/ReflushConfigState.cpp: In member function ‘virtual void ReflushConfigState::executeImpl() const’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/ReflushConfigState.cpp:11:29: error: ‘void APMROS2Drone::read_configs(const std::string&)’ is private within this context
   11 |         owner_->read_configs("OffboardControl.yaml");
      |         ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:363:14: note: declared private here
  363 |         void read_configs(const std::string &filename)
      |              ^~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:19:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h: In instantiation of ‘void StateMachine<T>::setCurrentState(const State<T>&) [with T = APMROS2Drone]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:249:9:   required from ‘void StateMachine<T>::transitionTo(const State<T>&) [with T = APMROS2Drone]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/ReflushConfigState.cpp:32:38:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:236:18: error: use of deleted function ‘State<T>::State(const State<T>&) [with T = APMROS2Drone]’
  236 |             auto previousState = getState(previous_state_name_);
      |                  ^~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/ReflushConfigState.h:2:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:137:9: note: declared here
  137 |         State(const State&) = delete;
      |         ^~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:230: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/ReflushConfigState.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/GotoShotPointState.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/GotoShotPointState.h:5:7: error: redefinition of ‘class GotoShotPointState’
    5 | class GotoShotPointState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/states.h:7,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:18,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/GotoShotPointState.h:3:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/GotoShotPointState.h:5:7: note: previous definition of ‘class GotoShotPointState’
    5 | class GotoShotPointState : public State<APMROS2Drone> {
      |       ^~~~~~~~~~~~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/GotoShotPointState.cpp:4:46: error: virt-specifiers in ‘executeImpl’ not allowed outside a class definition
    4 | void GotoShotPointState::executeImpl() const override {
      |                                              ^~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:19:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h: In instantiation of ‘void StateMachine<T>::setCurrentState(const State<T>&) [with T = APMROS2Drone]’:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:249:9:   required from ‘void StateMachine<T>::transitionTo(const State<T>&) [with T = APMROS2Drone]’
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/GotoShotPointState.cpp:16:38:   required from here
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/StateMachine.h:236:18: error: use of deleted function ‘State<T>::State(const State<T>&) [with T = APMROS2Drone]’
  236 |             auto previousState = getState(previous_state_name_);
      |                  ^~~~~~~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/GotoShotPointState.h:2:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../../stateMachine/State.h:137:9: note: declared here
  137 |         State(const State&) = delete;
      |         ^~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:202: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/GotoShotPointState.cpp.o] Error 1
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/EndState.cpp:1:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/EndState.h:6:7: error: redefinition of ‘class EndState’
    6 | class EndState : public State<APMROS2Drone> {
      |       ^~~~~~~~
In file included from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/states.h:5,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../APMROS2Drone.h:18,
                 from /home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/EndState.h:3:
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/../state/EndState.h:6:7: note: previous definition of ‘class EndState’
    6 | class EndState : public State<APMROS2Drone> {
      |       ^~~~~~~~
/home/linhao/code/ros2/dxy_apm_ws/src/px4_ros_com/src/offboard_control/APMROS2drone/state/EndState.cpp:4:36: error: virt-specifiers in ‘executeImpl’ not allowed outside a class definition
    4 | void EndState::executeImpl() const override {
      |                                    ^~~~~~~~
gmake[2]: *** [CMakeFiles/offboard_control.dir/build.make:174: CMakeFiles/offboard_control.dir/src/offboard_control/APMROS2drone/state/EndState.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:213: CMakeFiles/offboard_control.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
